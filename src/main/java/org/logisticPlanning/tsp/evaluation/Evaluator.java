package org.logisticPlanning.tsp.evaluation;

import java.io.File;
import java.io.IOException;
import java.io.PrintStream;
import java.util.logging.Level;
import java.util.logging.Logger;

import org.logisticPlanning.tsp.evaluation.data.DataSource;
import org.logisticPlanning.tsp.evaluation.data.ExperimentSet;
import org.logisticPlanning.tsp.evaluation.modules.spec.RootModule;
import org.logisticPlanning.utils.config.Configurable;
import org.logisticPlanning.utils.config.Configuration;
import org.logisticPlanning.utils.config.LoggerOwner;
import org.logisticPlanning.utils.document.spec.Body;
import org.logisticPlanning.utils.document.spec.Context;
import org.logisticPlanning.utils.document.spec.Document;
import org.logisticPlanning.utils.document.spec.DocumentDriver;
import org.logisticPlanning.utils.document.spec.Header;
import org.logisticPlanning.utils.io.FileUtils;

/**
 * <p>
 * This is main class of the evaluator component of the TSP Suite. Its main
 * class will take as arguments the source folder(s) with the log files
 * generated by the {@link org.logisticPlanning.tsp.benchmarking
 * benchmarking components} and the destination folder to write the report
 * to. It will produce a full fledged report, consisting of
 * </p>
 * <ol>
 * <li>An introduction, describing the experimental methodology, TSPs in
 * general, the data that we measure, and how we evaluate it.</li>
 * <li>The second section dedicates one sub section to each experiment
 * found in the source folder(s). Here, evaluations of the single
 * experiments are performed such as comparisons to results in literature,
 * printing of results, painting of diagrams displaying different
 * performances measures, etc.</li>
 * <li>If more than one experiment was detected in the input folder(s),
 * then a third section compares these experiments with each other. We can,
 * for example, use statistical tests to determine which algorithm tends to
 * produce better end results, or we can check which one tends to achieve
 * good results faster.</li>
 * </ol>
 * <p>
 * The evaluator accepts a variety of command line parameters, but the most
 * important are:
 * <p>
 * <ol>
 * <li>The list of folders with log files is specified as &quot;
 * <code>-source=myLogFilesDir1;myLogFilesDir2;...</code>&quot;.</li>
 * <li>The folder to receive the report is specified as &quot;
 * <code>-dest=myReportDir</code>&quot; This should be a new or empty
 * folder.</li>
 * <li>&quot;
 * <code>{@link org.logisticPlanning.tsp.evaluation.Evaluator#PARAM_DOCUMENT_DRIVER documentDriver}=...</code>
 * &quot; allows you to specify different output format drivers for
 * different document formats. Currently, we support the following values:
 * <ol>
 * <li>&quot;
 * <code>{@link org.logisticPlanning.utils.document.impl.xhtml.XHTMLDriver}</code>
 * &quot; will produce an <a
 * href="http://en.wikipedia.org/wiki/Xhtml">XHTML</a>&nbsp;[<a
 * href="#cite_W3C2010XHTML" style="font-weight:bold">1</a>] document.</li>
 * <li>&quot;
 * <code>{@link org.logisticPlanning.utils.document.impl.latex.LaTeXDriver}</code>
 * &quot; will produce a simple <a
 * href="http://en.wikipedia.org/wiki/LaTeX">LaTeX</a>&nbsp;[<a
 * href="#cite_L1994LADPSUGARM" style="font-weight:bold">2</a>, <a
 * href="#cite_GMS1994TLC" style="font-weight:bold">3</a>, <a
 * href="#cite_MGBCR2004TLC" style="font-weight:bold">4</a>, <a
 * href="#cite_OPHS2011TNSSITLOLI1M" style="font-weight:bold">5</a>, <a
 * href="#cite_JF2011LEEUEBM" style="font-weight:bold">6</a>, <a
 * href="#cite_J1995LFAONVDH" style="font-weight:bold">7</a>] report and
 * try to compile it to <a
 * href="http://en.wikipedia.org/wiki/Pdf">PDF</a>&nbsp;[<a
 * href="#cite_ADOBEISO32000" style="font-weight:bold">8</a>, <a
 * href="#cite_ISO320002008" style="font-weight:bold">9</a>]. The following
 * specialized LaTeX document formats exist:
 * <ol>
 * <li>the &quot;
 * <code>{@link org.logisticPlanning.utils.document.impl.latex.acmConf}</code>
 * &quot; using the ACM Conference template,</li>
 * <li>the &quot;
 * <code>{@link org.logisticPlanning.utils.document.impl.latex.ieeeArticle IEEE}</code>
 * &quot; using article template,</li>
 * <li>the &quot;
 * <code>{@link org.logisticPlanning.utils.document.impl.latex.ieeeConf IEEE}</code>
 * &quot; using the Conference template, and</li>
 * <li>the &quot;
 * <code>{@link org.logisticPlanning.utils.document.impl.latex.springerConf}</code>
 * &quot; using the Springer Lecture Notes on Computer Science-based
 * conference template.</li>
 * </ol>
 * </li>
 * </ol>
 * </li>
 * <li>If you pass the arguments &quot;
 * <code>-{@link org.logisticPlanning.tsp.evaluation.Evaluator#PARAM_EVALUATOR_LOGGER evaluatorLogger}="global";ALL</code>
 * &quot;, you will receive logging information about the progress
 * regarding loading the data, processing the data, and creating the
 * output.</li>
 * </ol>
 * <h2>References</h2>
 * <ol>
 * <li><div><span id="cite_W3C2010XHTML" /><a
 * href="http://www.altheim.com/murray/">Murray Altheim</a> and&nbsp;Shane
 * McCarron: <span
 * style="font-style:italic;font-family:cursive;">&ldquo;XHTML&#8482; 1.1
 * &#8212; Module-based XHTML &#8212; Second Edition,&rdquo;</span>
 * November&nbsp;23, 2010, W3C Recommendation, MIT/CSAIL (USA), ERCIM
 * (France), Keio University (Japan): World Wide Web Consortium (W3C).
 * <div>link: [<a
 * href="http://www.w3.org/TR/2010/REC-xhtml11-20101123">1</a>]</div></div>
 * </li>
 * <li><div><span id="cite_L1994LADPSUGARM" /><a
 * href="https://en.wikipedia.org/wiki/Leslie_Lamport">Leslie Lamport</a>:
 * <span style="font-style:italic;font-family:cursive;">&ldquo;LaTeX: A
 * Document Preparation System. User's Guide and Reference
 * Manual,&rdquo;</span> 1994, Reading, MA, USA: Addison-Wesley Publishing
 * Co. Inc.. ISBN:&nbsp;<a
 * href="https://www.worldcat.org/isbn/0201529831">0201529831</a>
 * and&nbsp;<a
 * href="https://www.worldcat.org/isbn/9780201529838">9780201529838</a>;
 * Google Book ID:&nbsp;<a
 * href="http://books.google.com/books?id=19pzDwEACAAJ"
 * >19pzDwEACAAJ</a></div></li>
 * <li><div><span id="cite_GMS1994TLC" /><a
 * href="http://goossens.web.cern.ch/goossens/">Michel Goossens</a>, <a
 * href="http://de.linkedin.com/in/frankmittelbach">Frank Mittelbach</a>,
 * and&nbsp;Alexander Samarin: <span
 * style="font-style:italic;font-family:cursive;">&ldquo;The LaTeX
 * Companion,&rdquo;</span> 1994, Tools and Techniques for Computer
 * Typesetting, Reading, MA, USA: Addison-Wesley Publishing Co. Inc..
 * ISBN:&nbsp;<a
 * href="https://www.worldcat.org/isbn/0201541998">0201541998</a>
 * and&nbsp;<a
 * href="https://www.worldcat.org/isbn/9780201541991">9780201541991</a>;
 * Google Book ID:&nbsp;<a
 * href="http://books.google.com/books?id=54A3MuBzIrEC"
 * >54A3MuBzIrEC</a></div></li>
 * <li><div><span id="cite_MGBCR2004TLC" /><a
 * href="http://de.linkedin.com/in/frankmittelbach">Frank Mittelbach</a>,
 * <a href="http://goossens.web.cern.ch/goossens/">Michel Goossens</a>, <a
 * href="http://www.linkedin.com/in/johannesbraams">Johannes Braams</a>, <a
 * href="http://www.dcarlisle.demon.co.uk/david/">David Carlisle</a>,
 * and&nbsp;<a href=
 * "http://www.informit.com/authors/bio.aspx?a=909F1094-95B5-42F8-B6CF-80C27C69B728"
 * >Chris Rowley</a>: <span
 * style="font-style:italic;font-family:cursive;">&ldquo;The LaTeX
 * Companion,&rdquo;</span> 2004, Reading, MA, USA: Addison-Wesley
 * Publishing Co. Inc.. ISBN:&nbsp;<a
 * href="https://www.worldcat.org/isbn/0201362996">0-201-36299-6</a></div></li>
 * <li><div><span id="cite_OPHS2011TNSSITLOLI1M" /><a
 * href="http://tobi.oetiker.ch/">Tobias Oetiker</a>, <a
 * href="http://homepage.boku.ac.at/partl/">Hubert Partl</a>, Irene Hyna,
 * and&nbsp;Elisabeth Schlegl: <span
 * style="font-style:italic;font-family:cursive;">&ldquo;The Not So Short
 * Introduction to LaTeX2&#949; &#8210; Or LaTeX2&#949; in 157
 * minutes,&rdquo;</span> April&nbsp;6, 2011. <div>links: [<a
 * href="http://tobi.oetiker.ch/lshort/lshort.pdf">1</a>] and&nbsp;[<a
 * href=
 * "http://www.vde.et.ruhr-uni-bochum.de/latex/dokumentation/tex_lshort.pdf"
 * >2</a>]</div></div></li>
 * <li><div><span id="cite_JF2011LEEUEBM" /><a
 * href="mailto:manuela.juergens@fernuni-hagen.de">Manuela J&#252;rgens</a>
 * and&nbsp;<a
 * href="http://www.fernuni-hagen.de/pr/team/thomas.feuerstack.shtml"
 * >Thomas Feuerstack</a>: <span
 * style="font-style:italic;font-family:cursive;">&ldquo;LaTeX eine
 * Einf&#252;hrung und ein bisschen mehr&#8230;,&rdquo;</span>
 * September&nbsp;2011, Hagen, North Rhine-Westphalia, Germany:
 * FernUniversit&#228;t in Hagen, Zentrum f&#252;r Medien &amp; IT.
 * <div>links: [<a href=
 * "http://www.fernuni-hagen.de/imperia/md/content/zmi_2010/a026_latex_einf.pdf"
 * >1</a>] and&nbsp;[<a href=
 * "http://www.wiwiss.fu-berlin.de/institute/iso/links/latex_einfuehrung_manuela_juergens.pdf"
 * >2</a>]</div></div></li>
 * <li><div><span id="cite_J1995LFAONVDH" /><a
 * href="mailto:manuela.juergens@fernuni-hagen.de">Manuela
 * J&#252;rgens</a>: <span
 * style="font-style:italic;font-family:cursive;">&ldquo;LaTeX &#8210;
 * Fortgeschrittene Anwendungen &#8210; oder: neues von den
 * Hobbits&#8230;,&rdquo;</span> 1995, Hagen, North Rhine-Westphalia,
 * Germany: FernUniversit&#228;t Gesamthochschule in Hagen,
 * Universit&#228;tsrechenzentrum, Abteilung Wissenschaftliche Anwendungen.
 * <div>links: [<a href=
 * "ftp://ftp.fernuni-hagen.de/pub/pdf/urz-broschueren/broschueren/a0279510.pdf"
 * >1</a>] and&nbsp;[<a
 * href="http://www2.fz-juelich.de/jsc/files/docs/bhb/bhb-0135.pdf"
 * >2</a>]</div></div></li>
 * <li><div><span id="cite_ADOBEISO32000" /><span
 * style="font-style:italic;font-family:cursive;">&ldquo;Adobe&#174;
 * Supplement to the ISO 32000; BaseVersion: 1.7; ExtensionLevel: 3;
 * Adobe&#174; Acrobat&#174; SDK, Version 9.0,&rdquo;</span>
 * June&nbsp;2008. <div>link: [<a href=
 * "http://wwwimages.adobe.com/www.adobe.com/content/dam/Adobe/en/devnet/pdf/pdfs/adobe_supplement_iso32000.pdf"
 * >1</a>]</div></div></li>
 * <li><div><span id="cite_ISO320002008" /><span
 * style="font-style:italic;font-family:cursive;">&ldquo;Document
 * Management &#8210; Portable Document Format &#8210; Part 1: PDF
 * 1.7,&rdquo;</span> July&nbsp;2008</div></li>
 * </ol>
 */
public class Evaluator extends LoggerOwner implements Runnable {
  /** the serial version uid */
  private static final long serialVersionUID = 1L;

  /**
   * the parameter identifying the logger to be used by the evaluator: * *
   * * {@value}
   */
  public static final String PARAM_EVALUATOR_LOGGER = "evaluatorLogger"; //$NON-NLS-1$
  /** the parameter identifying the document driver to be used: {@value} */
  public static final String PARAM_DOCUMENT_DRIVER = "documentDriver"; //$NON-NLS-1$
  /** the parameter identifying the data source to be used: {@value} */
  public static final String PARAM_DATA_SOURCE = "dataSource"; //$NON-NLS-1$
  /** the destination directory: {@value} */
  public static final String PARAM_DEST = "dest"; //$NON-NLS-1$

  /** the warning to be issued when no data is found: {@value} */
  public static final String WARNING_NO_DATA = "No data found that could be evaluated, so there is nothing to do here."; //$NON-NLS-1$

  /**
   * the data source
   *
   * @serial the driver implementation that provides the data
   */
  private DataSource m_dataSource;

  /**
   * the document driver
   *
   * @serial the driver responsible for output generation
   */
  private DocumentDriver m_documentDriver;

  /**
   * the destination directory
   *
   * @serial a file pointing to the destination directory
   */
  private File m_destDir;

  /**
   * the root module
   *
   * @serial the pointer to the root of the module hierarchy
   */
  private final RootModule m_modules;

  /** create */
  public Evaluator() {
    super("Evaluator", Evaluator.PARAM_EVALUATOR_LOGGER); //$NON-NLS-1$
    this.m_dataSource = this.createDefaultDataSource();
    this.m_documentDriver = this.createDefaultDocumentDriver();
    this.m_destDir = FileUtils.canonicalize(".");//$NON-NLS-1$
    this.m_modules = new RootModule(this);
  }

  /**
   * Create the default data source
   *
   * @return the default data source
   */
  protected DataSource createDefaultDataSource() {
    return DataSource.createDefaultDataSource();
  }

  /**
   * Create the default document driver
   *
   * @return the default document driver
   */
  protected DocumentDriver createDefaultDocumentDriver() {
    return DocumentDriver.createDefaultDocumentDriver();
  }

  /** {@inheritDoc} */
  @Override
  public void configure(final Configuration config) {
    super.configure(config);

    this.m_dataSource = config.getInstance(Evaluator.PARAM_DATA_SOURCE,
        DataSource.class, null, this.m_dataSource);
    this.m_documentDriver = config.getInstance(
        Evaluator.PARAM_DOCUMENT_DRIVER, DocumentDriver.class, null,
        this.m_documentDriver);
    this.m_destDir = config.getFile(Evaluator.PARAM_DEST, this.m_destDir);
    this.m_modules.configure(config);
  }

  /** {@inheritDoc} */
  @Override
  public void printConfiguration(final PrintStream ps) {
    super.printConfiguration(ps);

    Configurable.printKey(Evaluator.PARAM_DATA_SOURCE, ps);
    Configurable.printlnObject(this.m_dataSource, ps);

    Configurable.printKey(Evaluator.PARAM_DOCUMENT_DRIVER, ps);
    Configurable.printlnObject(this.m_documentDriver, ps);

    Configurable.printKey(Evaluator.PARAM_DEST, ps);
    ps.println(this.m_destDir);

    this.m_modules.printConfiguration(ps);
  }

  /** {@inheritDoc} */
  @Override
  public void printParameters(final PrintStream ps) {
    super.printParameters(ps);

    Configurable.printKey(Evaluator.PARAM_DATA_SOURCE, ps);
    ps.println("The data source driver."); //$NON-NLS-1$

    Configurable.printKey(Evaluator.PARAM_DOCUMENT_DRIVER, ps);
    ps.println("The document driver."); //$NON-NLS-1$

    Configurable.printKey(Evaluator.PARAM_DEST, ps);
    ps.println("The destination directory"); //$NON-NLS-1$

    this.m_modules.printParameters(ps);
  }

  /**
   * load the data
   *
   * @return the data
   */
  private final ExperimentSet __loadData() {
    final Logger log;
    final DataSource ds;
    ExperimentSet es;

    log = this.getLogger();

    ds = this.m_dataSource;
    if (ds == null) {
      if ((log != null) && (log.isLoggable(Level.INFO))) {
        log.info("Data source is null, cannot load any data."); //$NON-NLS-1$
      }
      return null;
    }

    if ((log != null) && (log.isLoggable(Level.INFO))) {
      log.info("Now loading data using the '" + ds.name() + //$NON-NLS-1$
          "' data source."); //$NON-NLS-1$
    }
    es = null;
    try {
      try {
        es = ds.loadData();
      } catch (final IOException e) {
        if (log != null) {
          log.log(Level.SEVERE, "An error occured while loading data.", e);//$NON-NLS-1$
        }
      }
    } finally {
      if ((log != null) && (log.isLoggable(Level.INFO))) {
        log.info("Finished loading data using the '" + ds.name() + //$NON-NLS-1$
            "' data source, discovered " + //$NON-NLS-1$
            ((es == null) ? " no experiment set" : //$NON-NLS-1$
                (" a set of " + es.size() + //$NON-NLS-1$
                " experiments.")));//$NON-NLS-1$
      }
    }

    return es;
  }

  /**
   * perform the evaluation process
   *
   * @param es
   *          the experiment set
   */
  private final void __performEvaluation(final ExperimentSet es) {
    final Logger log;

    log = this.getLogger();

    if (!(this.m_modules.isActive())) {
      if ((log != null) && (log.isLoggable(Level.INFO))) {
        log.info("The main evaluator module is marked as inactive - we quit here."); //$NON-NLS-1$
      }
      return;
    }

    if ((log != null) && (log.isLoggable(Level.INFO))) {
      log.info("Now begining to evaluate and writing the report to folder '" + //$NON-NLS-1$
          this.m_destDir + "' by using driver '" + //$NON-NLS-1$
          this.m_documentDriver.name() + '\'');
    }
    try {
      try {
        try (final Context ctx = this.m_documentDriver
            .createContext(this.m_destDir)) {

          ctx.preprocess();

          try (final Document doc = ctx.document()) {
            try (Header header = doc.header()) {
              this.m_modules.initialize(header, es);
            }

            try (Body body = doc.body()) {
              this.m_modules.run(body, es);
            }
          }

          ctx.postprocess();
        }
      } catch (final Throwable t) {
        if (log != null) {
          log.log(Level.SEVERE,
              "An error occured while writing the output.", t); //$NON-NLS-1$
        }
      }

    } finally {
      if ((log != null) && (log.isLoggable(Level.INFO))) {
        log.info("Finished the evaluation and writing the report to folder '" + //$NON-NLS-1$
            this.m_destDir + "' by using driver '" + //$NON-NLS-1$
            this.m_documentDriver.name() + '\'');
      }
    }
  }

  /** {@inheritDoc} */
  @Override
  public void run() {
    final Logger log;
    final ExperimentSet es;

    log = this.getLogger();
    if ((log != null) && (log.isLoggable(Level.INFO))) {
      log.info("Beginning the evaluation process.");//$NON-NLS-1$
    }
    try {

      es = this.__loadData();
      if ((es == null) || (es.isEmpty())) {
        if ((log != null) && (log.isLoggable(Level.INFO))) {
          log.info(Evaluator.WARNING_NO_DATA);
        }

        return;
      }

      this.__performEvaluation(es);

    } finally {
      if ((log != null) && (log.isLoggable(Level.INFO))) {
        log.info("Finished the evaluation process.");//$NON-NLS-1$
      }
    }
  }

  /** {@inheritDoc} */
  @Override
  public Logger getLogger() {
    return super.getLogger();
  }

  /**
   * The main routine for running the evaluator
   *
   * @param args
   *          the command line arguments
   * @throws Throwable
   *           on error
   */
  public static void main(final String[] args) throws Throwable {
    final Configuration conf;
    final Evaluator ev;
    final Logger log;

    conf = new Configuration();
    conf.configure(args);

    ev = new Evaluator();
    ev.configure(conf);
    log = ev.getLogger();
    if (log != null) {
      ev.logConfiguration(Level.INFO, log);
    }

    ev.run();
  }
}
